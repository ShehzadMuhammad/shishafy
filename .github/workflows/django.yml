name: Django CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.DB_TEST_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_TEST_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_TEST_NAME }}
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U postgres" --health-timeout=5s --health-start-period=5s --health-retries=5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install Ruff
        run: pip install ruff
      - name: Lint code with Ruff
        run: ruff check --output-format=github --target-version=py39
      - name: Check code formatting with Ruff
        run: ruff format --diff --target-version=py39
        continue-on-error: true

      # Set environment variables for Django
      - name: Set up Django environment variables
        run: |
          echo "DB_NAME=${{ secrets.DB_TEST_NAME }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_TEST_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_TEST_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_TEST_HOST }}" >> $GITHUB_ENV  # Set DB_HOST as localhost since it's in the same CI environment
          echo "DB_PORT=${{ secrets.DB_TEST_PORT }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
      - name: Run Tests
        run: |
          python manage.py test
